package com.fds.registration;
import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.when;

import org.junit.Before;
import org.junit.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import com.fds.registration.controller.RegistrationController;
import com.fds.registration.model.Registration;
import com.fds.registration.service.RegistrationServiceImpl;

public class RegistrationControllerTest {

    @Mock
    private RegistrationServiceImpl registrationService;

    private RegistrationController registrationController;

//    @Before
//    public void setup() {
//        MockitoAnnotations.initMocks(this);
//        registrationController = new RegistrationController(registrationService);
//    }

    @Test
    public void testSaveUserWithValidRole() throws Exception {
        Registration validUser = new Registration();
        validUser.setRole("Admin");

        when(registrationService.save(validUser)).thenReturn(validUser);

        ResponseEntity<?> response = registrationController.saveUser(validUser);

        assertEquals(HttpStatus.OK, response.getStatusCode());
        assertEquals(validUser, response.getBody());
    }

    @Test
    public void testSaveUserWithInvalidRole() throws Exception {
        Registration invalidUser = new Registration();
        invalidUser.setRole("InvalidRole");

        ResponseEntity<?> response = registrationController.saveUser(invalidUser);

        assertEquals(HttpStatus.INTERNAL_SERVER_ERROR, response.getStatusCode());
    }

}
